() {
    d="$(tput smso)  $(tput rmso)"
    clear
    echo "
     $d  $d    $d      $d  $d      $d              $d                  $d
   $d$d$d$d$d  $d    $d    $d          $d$d      $d    $d$d$d    $d$d  $d
     $d  $d    $d    $d    $d$d    $d  $d  $d    $d        $d  $d$d    $d$d
   $d$d$d$d$d      $d      $d  $d  $d  $d  $d  $d        $d      $d$d  $d  $d
     $d  $d    $d  $d      $d$d    $d  $d  $d  $d      $d$d$d  $d$d    $d  $d
    "
}

# Ë£úÂÆå
fpath=(/usr/local/share/zsh/site-functions(N-/) $fpath)
autoload -U compinit; compinit
setopt -U auto_cd
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
setopt pushd_ignore_dups
setopt auto_menu
zstyle ':completion:*:default' menu select=1
setopt list_packed
bindkey "[Z" reverse-menu-complete

# Ë®ÄË™û
export LANG=ja_JP.UTF-8
setopt print_eight_bit

# „ÇÇ„Åó„Åã„Åó„Å¶Ê©üËÉΩ
setopt correct

# Ëâ≤
autoload -Uz colors; colors
TERM='xterm-256color'

# „Éó„É≠„É≥„Éó„Éà
autoload -Uz add-zsh-hook
autoload -Uz vcs_info
setopt prompt_subst
zstyle ":vcs_info:*" enable git
zstyle ":vcs_info:*" max-exports 2
zstyle ":vcs_info:git:*" check-for-changes true
zstyle ":vcs_info:git:*" formats     "[%b]%c%u" "%m"
zstyle ":vcs_info:git:*" unstagedstr "[-]"
zstyle ":vcs_info:git:*" stagedstr   "[+]"
zstyle ":vcs_info:git+set-message:*" hooks git-untracked git-remote

function +vi-git-untracked() {
    [[ $1 = 0 ]] || return 0

    git status --porcelain 2>/dev/null | grep '^??' >/dev/null 2>&1 && hook_com[unstaged]+='[N]' || :
}

function +vi-git-remote() {
    [[ $1 = 1 ]] || return 0

    local remote_branch="$(git rev-parse --abbrev-ref @{u} 2>/dev/null)"
    [[ -n "${remote_branch}" ]] && hook_com[misc]+=" ‚Üí  [${remote_branch}]" || :
}

function _init_psvar() { psvar=(); }

function _update_vcs_info_msg() {
    vcs_info; local msg="${vcs_info_msg_0_}${vcs_info_msg_1_}"

    if [[ -n "${msg}" ]]; then
        if echo ${vcs_info_msg_0_} | grep '\[[N+-]\]' >/dev/null 2>&1; then
            psvar[1]=""
            psvar[2]="‚úò ${vcs_info_msg_0_}${vcs_info_msg_1_}"
        else
            psvar[1]="‚úî ${vcs_info_msg_0_}${vcs_info_msg_1_}"
            psvar[2]=""
        fi
    fi
}

function _update_pwd_pretty() {
    local pwd="`pwd`"
    if [[ $pwd =~ $HOME ]]; then
        psvar[3]="${${pwd/$HOME/ÔëÆ }//\// ‚ÆÅ }"
    else
        psvar[3]="/${pwd//\// ‚ÆÅ }"
    fi
}

add-zsh-hook precmd _init_psvar
add-zsh-hook precmd _update_vcs_info_msg
# add-zsh-hook precmd _update_pwd_pretty

PROMPT="
%F{6}%n@%m:%f %F{yellow}%~%f %F{green}%1v%f%F{red}%2v%f
%(?.%F{blue}.%F{red})$%f "

case `uname` in
    'Darwin')
        SPROMPT="%B%F{red}(‡πë‚Ä¢Ôπè‚Ä¢)%f%b < %r„ÅÆ„Åì„Å®Ë®Ä„Å£„Å¶„Çã„Çì„Åß„Åô„Åã„Å≠...? [y, n, a, e]:"
        ;;
    *)
        SPROMPT="%B%F{red}(X | _ | )%f%b < „ÅäÂâç„Åå%r„Å®ÊÄù„ÅÜ„Çì„Å™„Çâ„Åù„ÅÜ„Å™„Çì„Å†„Çç„ÅÜ. „ÅäÂâç„Çì‰∏≠„Åß„ÅØ„Å™. [y, n, a, e]:"
        ;;
esac

# Â±•Ê≠¥„Éï„Ç°„Ç§„É´„ÅÆ‰øùÂ≠òÂÖà
export HISTFILE=$HOME/.zsh_history

# „É°„É¢„É™„Å´‰øùÂ≠ò„Åï„Çå„ÇãÂ±•Ê≠¥
export HISTSIZE=1000

# „Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò„Åï„Çå„ÇãÂ±•Ê≠¥
export SAVEHIST=100000

# Â±•Ê≠¥„ÇíË§áÊï∞Á´ØÊú´Èñì„ÅßÂÖ±Êúâ„Åô„Çã
setopt share_history

# zsh„ÇíÂêåÊôÇ„Å´Ë§áÊï∞Ëµ∑Âãï„Åó„Å¶„ÇãÂ†¥Âêà„ÅØ„ÄÅÂ±•Ê≠¥„Çí‰∏äÊõ∏„Åç„Åõ„Åö„Å´ËøΩÂä†
setopt append_history

# Â±•Ê≠¥„ÇíÈáçË§á„Åó„Å¶‰øùÂ≠ò„Åó„Å™„ÅÑ
setopt hist_ignore_dups

# Áõ¥Ââç„ÅÆ„Ç≥„Éû„É≥„Éâ„ÅåÂ±•Ê≠¥„Å´„ÅÇ„ÇãÂ†¥Âêà„ÅØ‰∏äÊõ∏„Åç„Åô„Çã
setopt hist_ignore_all_dups

# Â±•Ê≠¥„ÅÆÈñãÂßã„Å®ÁµÇ‰∫Ü„ÇíË®òÈå≤
setopt EXTENDED_HISTORY

# history„Ç≥„Éû„É≥„ÉâËá™‰Ωì„ÅØ‰øùÂ≠ò„Åó„Å™„ÅÑ
setopt hist_no_store

# Â±•Ê≠¥„ÅÆÁ©∫ÁôΩ„ÅØ„Å§„ÇÅ„Çã
setopt hist_reduce_blanks

# Âè§„ÅÑ„Ç≥„Éû„É≥„Éâ„Å®Âêå„Åò„ÇÑ„Å§„ÅØ‰øùÂ≠ò„Åó„Å™„ÅÑ
setopt hist_save_no_dups

# .lesshst„Çí‰ΩúÊàê„Åó„Å™„ÅÑ
export LESSHISTFILE=-

# „É™„É≠„Éº„Éâ
alias reload="source $HOME/.zshrc"

# „Ç®„Ç§„É™„Ç¢„Çπ
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

alias -g l="qlmanage -p ${@} >/dev/null 2>&1"
alias ls='ls -GFh'

if [ -e /Applications/MacVim.app ]; then
    export EDITOR='/Applications/MacVim.app/Contents/MacOS/Vim'
    alias vim='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
    alias vi='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
    alias gvim='/Applications/MacVim.app/Contents/MacOS/mvim'
fi

function pcolor() {
    for ((f = 0; f < 255; f++)); do
        printf "\e[38;5;%dm %3d#\e[m" $f $f
        if [[ $f%8 -eq 7 ]] then
            printf "\n"
        fi
    done
    echo
}

functions _his() {
    BUFFER=$(fc -l -n 1 | eval ${commands[tac]:-"tail -r"} | peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle -R -c
}
if which peco >/dev/null 2>&1; then
    zle -N _his
    alias his='_his'
    bindkey '^R' _his
fi

# Git
alias st='git status'
alias ck='git checkout'
alias br='git branch'
alias co='git commit -v'
alias di='git diff'
alias gg='git graph | head'

# source
source_target=(
    /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
    $HOME/.zshrc_local
)

for target in ${source_target[*]}; { [[ -f "$target" ]] && source "$target"; }

# tmuxËá™ÂãïËµ∑Âãï
if [ -z "${TMUX}" -a -z "${STY}" ]; then
    if type tmux >/dev/null 2>&1; then
        if tmux has-session && tmux list-sessions | grep -q '.*]$'; then
            tmux attach
        else
            tmux new-session
        fi
    fi
fi
