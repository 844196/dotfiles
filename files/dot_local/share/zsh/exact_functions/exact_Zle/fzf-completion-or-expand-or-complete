# vim: set ft=zsh:

case $BUFFER in
  'git checkout ')
    FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --no-multi --select-1 --exit-0" anyframe-widget-insert-git-branch-name --head-ignore
    ;;

  git\ branch\ -[dD]\ )
    FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --multi --select-1 --exit-0 --color=marker:red" anyframe-widget-insert-git-branch-name --head-ignore --gone-first
    ;;

  'git add '|'git reset ')
    anyframe-widget-insert-git-status-file
    ;;

  'git rebase ')
    # TODO リモートを切り替えて表示できるように
    FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --no-multi --select-1 --exit-0" anyframe-widget-insert-git-branch-name --head-ignore
    ;;

  git\ rebase\ (-i|--interactive)\ )
    anyframe-widget-insert-git-commit-hash --preview "
      echo {} | grep -o '[a-f0-9]\{7\}' | xargs -I_ git log --color=never --reverse --format='pick %h %s' _..HEAD | emojify | bat --style plain -l git-rebase-todo --color=always
    "
    ;;

  git\ commit\ --fixup(=|\ ))
    anyframe-widget-insert-git-commit-hash

    BUFFER="${BUFFER}${1}"
    CURSOR=${#BUFFER}
    ;;

  git\ commit\ (-m\ |--message(=|\ )))
    local old_buffer=$BUFFER

    anyframe-widget-insert-gitmoji --wrap --height 25%

    if [[ "$old_buffer" != "$BUFFER" ]]; then
      CURSOR=$(( ${#BUFFER} - 1 ))
    fi
    ;;

  *)
    zle expand-or-complete
    ;;
esac

zle autosuggest-fetch
