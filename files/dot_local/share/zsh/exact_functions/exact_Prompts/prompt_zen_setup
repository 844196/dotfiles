# vim: set ft=zsh:

prompt_zen_help() {
  cat <<'EOF'
Usage:
  prompt zen
EOF
}

prompt_zen_setup() {
  emulate -L zsh
  setopt EXTENDED_GLOB

  autoload -Uz vcs_info add-zsh-hook evalcache

  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:git:*' use-simple yes
  zstyle ':vcs_info:git:*' check-for-changes no
  zstyle ':vcs_info:git:*' check-for-staged-changes yes
  zstyle ':vcs_info:git:*' max-exports 1
  zstyle ':vcs_info:git:*' formats '%b:%u%c:%m' # %b:CurrentBranch, %u:Unstaged, %c:Staged, %m:Misc
  zstyle ':vcs_info:git+set-message:*' hooks \
    prompt_zen_git-status \
    prompt_zen_git-remote \
    prompt_zen_git-author

  add-zsh-hook precmd prompt_zen_precmd
  zle -N prompt_zen_async_precmd_callback

  prompt_opts=(cr sp percent)
  PS1='
%F{4}%n@%m%f %F{8}in%f %F{12}󰉋 %(1V.%1v.%~)%f %(2V.%F{8}on%f %F{5} %2v%(3V.%F{15}*%f . )%(4V.%F{5}⇡%4v%f .)%(5V.%F{5}⇣%5v%f.)%f.)
%(?.%F{8}.%F{9})%(!.#.)%f '
  RPS1=$'%(6V.%{\e[38;2;52;57;78m%} %6v%f.)'

  # https://news.ycombinator.com/item?id=26757438
  # https://www.reddit.com/r/zsh/comments/c160o2/comment/erbdiqj/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button
  zle_highlight+=(paste:none)

  evalcache ~/.local/libexec/vivid-compat iceberg-dark

  zstyle ':completion:*' list-separator '│'
  zstyle ':completion:*' list-colors ${(s.:.)${LS_COLORS/no=([^:])#/}} 'no=0;38;5;8' 'ma=0;38;5;0;48;5;8'

  # see: https://gist.github.com/sheepla/d1ff1ef11cc21dcc7434a25a012a970f
  export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS"
    --prompt ' '
    --color bg:-1
    --color bg+:#1e2132
    --color fg:#c6c8d1
    --color fg+:#c6c8d1
    --color hl:blue
    --color hl+:blue
    --color spinner:#84a0c6
    --color header:#6b7089
    --color border:#34394E
    --color preview-label:#34394E
    --color gutter:-1
    --color info:#34394E
    --color pointer:#84a0c6
    --color marker:#84a0c6
    --color prompt:8
  "

  ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=black,bold"

  fast-theme ~/.config/fsh/zen.ini 2>&1 >/dev/null
}

prompt_zen_precmd() {
  emulate -L zsh
  setopt EXTENDED_GLOB

  {
    psvar=()

    local fd
    exec {fd}< <(prompt_zen_async_precmd)
    zle -Fw $fd prompt_zen_async_precmd_callback

    local match=((../)#.git(#qN))
    if (( $+match[1] )); then
      local root=${match[1]:A:h}
      psvar[1]=${root:t}${PWD#$root}
    fi
  } always {
    # Ensure next hook will run
    # see: https://zsh.sourceforge.io/Doc/Release/Functions.html#index-hook-functions
    :
  }
}

prompt_zen_async_precmd() {
  LANG=C vcs_info
  print $vcs_info_msg_0_
}

prompt_zen_async_precmd_callback() {
  local fd=$1
  {
    zle -F $fd

    local REPLY
    read -ru $fd
    [[ -z $REPLY ]] &&
      return

    local segments=("${(@s[:])REPLY}")
    psvar[2]=$segments[1]
    psvar[3]=$segments[2]
    psvar[4]=$segments[3]
    psvar[5]=$segments[4]
    psvar[6]=$segments[5]

    cat <<EOF>> ~/output.yaml
-
  all: $REPLY
  branch: $segments[1]
  staged: $segments[2]
  remote_ahead: $segments[3]
  remote_behind: $segments[4]
  user: $segments[5]
EOF

    zle && [[ $CONTEXT == start ]] &&
      zle .reset-prompt
  } always {
    exec {fd}<&-
  }
}

+vi-prompt_zen_git-status() {
  [[ -n $hook_com[staged] ]] &&
    return

  # Avoid index update (i.e. .git/index.lock remain)
  # see: https://git-scm.com/docs/git-status#_background_refresh
  hook_com[unstaged]=${$(git --no-optional-locks status --porcelain -unormal 2>/dev/null):+U}
}

+vi-prompt_zen_git-remote() {
  local upstream=$(git rev-parse --abbrev-ref --symbolic-full-name @{upstream} 2>/dev/null)
  if [[ "$upstream" == "@{upstream}" ]]; then
    hook_com[misc]+=':'
    return
  fi

  hook_com[misc]=${${(s: :j[:])$(git rev-list --left-right --count HEAD...${upstream} 2>/dev/null)}//0/}
}

+vi-prompt_zen_git-author() {
  hook_com[misc]+=":$(git config --local user.name 2>/dev/null)"
}

prompt_zen_setup "$@"
