# vim: set ft=zsh:

__PSVAR_IDX_PWD=1
__PSVAR_IDX_GIT_BRANCH=2
__PSVAR_IDX_GIT_STATUS=3
__PSVAR_IDX_GIT_REMOTE_AHEAD=4
__PSVAR_IDX_GIT_REMOTE_BEHIND=5
__PSVAR_IDX_GIT_AUTHOR=6
__PSVAR_IDX_GIT_AUTHOR_WARNING=7
__PSVAR_IDX_REMOTE_CONTAINERS=8

prompt_zen_help() {
  cat <<'EOF'
Usage:
  prompt zen
EOF
}

prompt_zen_pwd() {
  emulate -L zsh
  setopt EXTENDED_GLOB

  # https://zsh.sourceforge.io/Doc/Release/Expansion.html#index-glob-operators
  local git_match=((../)#.git(#qN))

  if (( $+git_match[1] )); then
    local git_root=${git_match[1]:A:h}
    print -rn ${git_root:t}${PWD#$git_root}
  else
    print -rn ${(%):-%~}
  fi
}

prompt_zen_setup() {
  emulate -L zsh
  autoload -Uz add-zsh-hook

  local -A opthash
  zparseopts -D -A opthash -- -instant-pre -instant-post

  # https://gist.github.com/romkatv/8b318a610dc302bdbe1487bb1847ad99
  if [[ -n "$opthash[(i)--instant-pre]" ]]; then
    unsetopt PROMPT_CR PROMPT_SP

    psvar=("$(prompt_zen_pwd)")
    local INSTANT_PS1='
%F{12}%1v%f
%F{8}%(!.#.)%f '
    print -rn -- $'\e7'${(%)INSTANT_PS1}

    __clear_instant_ps1() {
      setopt PROMPT_CR PROMPT_SP
      print -rn $'\e[?25l\e8\e[0m\e[J\e[?25h'
      unfunction __clear_instant_ps1
      add-zsh-hook -d precmd __clear_instant_ps1
    }
    return
  elif [[ -n "$opthash[(i)--instant-post]" ]]; then
    add-zsh-hook precmd __clear_instant_ps1
    return
  fi

  setopt EXTENDED_GLOB
  autoload -Uz vcs_info evalcache

  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:git:*' use-simple yes
  zstyle ':vcs_info:git:*' check-for-changes no
  zstyle ':vcs_info:git:*' check-for-staged-changes yes
  zstyle ':vcs_info:git:*' max-exports 1
  zstyle ':vcs_info:git:*' formats '%b:%u%c:%m' # %b:CurrentBranch, %u:Unstaged, %c:Staged, %m:Misc
  zstyle ':vcs_info:git+set-message:*' hooks prompt_zen_git-{status,remote,author}

  add-zsh-hook precmd prompt_zen_precmd
  zle -N prompt_zen_async_precmd_callback

  prompt_opts=(percent)

  local OSC_133_A=$'\e]133;A;\a'
  local OSC_133_B=$'\e]133;B;\a'
  local OSC_133_D=$'\e]133;D;\a'
  local SGR_DIM_START=$'\e[2m'
  local SGR_DIM_RESET=$'\e[22m'

  PS1="%{${OSC_133_D}%}
%{${OSC_133_A}%}%(${__PSVAR_IDX_REMOTE_CONTAINERS}V.%F{4}%n@%m%f %F{8}in%f .)%F{12}%${__PSVAR_IDX_PWD}v%f %(${__PSVAR_IDX_GIT_BRANCH}V.%F{8}on%f %F{5}%${__PSVAR_IDX_GIT_BRANCH}v%(${__PSVAR_IDX_GIT_STATUS}V.%F{15}*%f . )%(${__PSVAR_IDX_GIT_REMOTE_AHEAD}V.%F{5}⇡%4v%f .)%(${__PSVAR_IDX_GIT_REMOTE_BEHIND}V.%F{5}⇣%5v%f.)%f.)
%(?.%F{8}.%F{9})%(!.#.)%f %{${OSC_133_B}%}"

  RPS1="%(${__PSVAR_IDX_GIT_AUTHOR_WARNING}V.%F{1}.%F{8})%{${SGR_DIM_START}%}%(${__PSVAR_IDX_GIT_AUTHOR}V.%${__PSVAR_IDX_GIT_AUTHOR}v.)%{${SGR_DIM_RESET}%}%f"

  # https://news.ycombinator.com/item?id=26757438
  # https://www.reddit.com/r/zsh/comments/c160o2/comment/erbdiqj/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button
  zle_highlight+=(paste:none)

  evalcache ~/.local/libexec/vivid-compat iceberg-dark

  zstyle ':completion:*' list-separator '│'
  zstyle ':completion:*' list-colors ${(s.:.)${LS_COLORS/no=([^:])#/}} 'no=0;38;5;8' 'ma=0;38;5;0;48;5;8'

  # see: https://gist.github.com/sheepla/d1ff1ef11cc21dcc7434a25a012a970f
  export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS"
    --prompt ' '
    --color gutter:-1
    --color prompt:8
    --color info:8
    --color header:8
    --color border:0
    --color pointer:8
    --color marker:3
    --color fg:-1
    --color bg:-1
    --color fg+:-1
    --color bg+:0
    --color hl:1
    --color hl+:1
  "

  export BAT_THEME="iceberg"

  ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=black,bold"

  # Set only when f-sy-h theme is not set
  # https://github.com/zdharma-continuum/fast-syntax-highlighting/issues/44#issuecomment-1399581264
  local current_fsh_theme
  zstyle -g current_fsh_theme ':plugin:fast-syntax-highlighting' theme
  if [[ "$current_fsh_theme" != "zen" ]]; then
    fast-theme $XDG_CONFIG_HOME/fsh/zen.ini 2>&1 >/dev/null
  fi
}

prompt_zen_precmd() {
  emulate -L zsh
  setopt EXTENDED_GLOB

  {
    psvar[$__PSVAR_IDX_PWD]="$(prompt_zen_pwd)"
    psvar[$__PSVAR_IDX_REMOTE_CONTAINERS]=$REMOTE_CONTAINERS
    psvar[$__PSVAR_IDX_GIT_BRANCH]=
    psvar[$__PSVAR_IDX_GIT_STATUS]=
    psvar[$__PSVAR_IDX_GIT_REMOTE_AHEAD]=
    psvar[$__PSVAR_IDX_GIT_REMOTE_BEHIND]=
    psvar[$__PSVAR_IDX_GIT_AUTHOR]=
    psvar[$__PSVAR_IDX_GIT_AUTHOR_WARNING]=

    local fd
    exec {fd}< <(prompt_zen_async_precmd)
    zle -Fw $fd prompt_zen_async_precmd_callback
  } always {
    # Ensure next hook will run
    # see: https://zsh.sourceforge.io/Doc/Release/Functions.html#index-hook-functions
    :
  }
}

prompt_zen_async_precmd() {
  LANG=C vcs_info
  print $vcs_info_msg_0_
}

prompt_zen_async_precmd_callback() {
  local fd=$1
  {
    zle -F $fd

    local REPLY
    read -ru $fd
    [[ -z $REPLY ]] &&
      return

    local segments=("${(@s[:])REPLY}")
    psvar[$__PSVAR_IDX_GIT_BRANCH]=$segments[1]
    psvar[$__PSVAR_IDX_GIT_STATUS]=$segments[2]
    psvar[$__PSVAR_IDX_GIT_REMOTE_AHEAD]=$segments[3]
    psvar[$__PSVAR_IDX_GIT_REMOTE_BEHIND]=$segments[4]
    psvar[$__PSVAR_IDX_GIT_AUTHOR]=$segments[5]
    psvar[$__PSVAR_IDX_GIT_AUTHOR_WARNING]=$segments[6]

    zle && [[ $CONTEXT == start ]] &&
      zle reset-prompt
  } always {
    exec {fd}<&-
  }
}

+vi-prompt_zen_git-status() {
  [[ -n $hook_com[staged] ]] &&
    return

  # Avoid index update (i.e. .git/index.lock remain)
  # see: https://git-scm.com/docs/git-status#_background_refresh
  hook_com[unstaged]=${$(git --no-optional-locks status --porcelain -unormal 2>/dev/null):+U}
}

+vi-prompt_zen_git-remote() {
  hook_com[misc]=${${(s: :j[:])$(git rev-list --left-right --count HEAD...${hook_com[branch]}@{upstream} 2>/dev/null || echo '0 0')}//0/}
}

+vi-prompt_zen_git-author() {
  local git_author="${$(git config --local user.name 2>/dev/null)}"
  if [[ -z "$git_author" ]]; then
    hook_com[misc]+="::"
    return
  fi

  local gh_user="$(yq '."github.com".user' $XDG_CONFIG_HOME/gh/hosts.yml 2>/dev/null)"

  local warning_marker=
  if [[ "$git_author" != "$gh_user" ]]; then
    warning_marker=1
  fi

  hook_com[misc]+=":${git_author}:${warning_marker}"
}

prompt_zen_setup "$@"
