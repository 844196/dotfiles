# vim: set ft=zsh:

prompt_zen_help() {
  cat <<'EOF'
Usage:
  prompt zen

Note:
  Requires zsh-async (https://github.com/mafredri/zsh-async)
EOF
}

prompt_zen_async_init() {
  async_start_worker prompt_zen_async_jobs
  async_register_callback prompt_zen_async_jobs prompt_zen_async_jobs_callback
}

prompt_zen_async_jobs() {
  setopt LOCAL_OPTIONS EXTENDED_GLOB

  async_flush_jobs prompt_zen_async_jobs

  if [[ -n ./(../)#.git(#qN) ]]; then
    async_job prompt_zen_async_jobs prompt_zen_async_job+vcs-info $PWD
    async_job prompt_zen_async_jobs prompt_zen_async_job+git-status $PWD
    async_job prompt_zen_async_jobs prompt_zen_async_job+git-author $PWD
  fi
}

prompt_zen_async_job+vcs-info() {
  cd -q $1
  LANG=C vcs_info
  print $vcs_info_msg_0_
}

prompt_zen_async_job+git-status() {
  # see https://git-scm.com/docs/git-status#_background_refresh
  git -C $1 --no-optional-locks status --porcelain -unormal
}

prompt_zen_async_job+git-author() {
  git -C $1 config --local user.name
}

prompt_zen_async_jobs_callback() {
  local job=$1 code=$2 output=$3

  case $job in
    \[async])
      if (( code == 2 )) || (( code == 3 )) || (( code == 130 )); then
        async_stop_worker prompt_zen_async
        prompt_zen_async_init
        prompt_zen_async_jobs
      fi
      ;;
    prompt_zen_async_job+vcs-info)
      psvar[2]=$output
      ;;
    prompt_zen_async_job+git-status)
      psvar[3]=$output
      ;;
    prompt_zen_async_job+git-author)
      psvar[4]=$output
      ;;
  esac
  zle reset-prompt
}

prompt_zen_precmd() {
  psvar=()

  local rest=$PWD
  while [[ $rest != / ]]; do
    if [[ -e $rest/.git ]]; then
      psvar[1]=${rest:t}${PWD##$rest}
      break
    fi
    rest=${rest:h}
  done

  prompt_zen_async_jobs
}

prompt_zen_setup() {
  autoload -Uz vcs_info add-zsh-hook

  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:git:*' use-simple yes
  zstyle ':vcs_info:git:*' max-exports 1
  zstyle ':vcs_info:git:*' formats '%b'

  add-zsh-hook precmd prompt_zen_precmd
  prompt_zen_async_init

  PS1='
%F{4}%n@%m%f %F{8}in%f %F{12} %(1V.%1v.%~)%f %(2V.%F{8}on%f %F{5} %2v%(3V.%F{9}*%f.)%f.)
%(?.%F{8}.%F{9})%(!.#.)%f '
  RPS1='%(4V.%F{8} %4v%f.)'

  prompt_opts=(cr sp percent)
}

prompt_zen_setup "$@"
