# vim: set ft=zsh:

prompt_zen_help() {
  cat <<'EOF'
Usage:
  prompt zen
EOF
}

prompt_zen_setup() {
  autoload -Uz vcs_info add-zsh-hook

  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:git:*' use-simple yes
  zstyle ':vcs_info:git:*' max-exports 1
  zstyle ':vcs_info:git:*' formats '%b:%u:%m'
  zstyle ':vcs_info:git+set-message:*' hooks prompt_zen_git-status prompt_zen_git-author

  add-zsh-hook precmd prompt_zen_precmd
  zle -N prompt_zen_async_precmd_callback

  PS1='
%F{4}%n@%m%f %F{8}in%f %F{12} %(1V.%1v.%~)%f %(2V.%F{8}on%f %F{5} %2v%(3V.%F{15}*%f.)%f.)
%(?.%F{8}.%F{9})%(!.#.)%f '
  RPS1=$'%(4V.%{\e[38;2;52;57;78m%} %4v%f.)'

  prompt_opts=(cr sp percent)
}

prompt_zen_precmd() {
  emulate -L zsh
  setopt EXTENDED_GLOB

  {
    psvar=()

    local fd
    exec {fd}< <(prompt_zen_async_precmd)
    zle -Fw $fd prompt_zen_async_precmd_callback

    local match=((../)#.git(#qN))
    if (( $+match[1] )); then
      local root=${match[1]:A:h}
      psvar[1]=${root:t}${PWD#$root}
    fi
  } always {
    # Ensure next hook will run
    # see: https://zsh.sourceforge.io/Doc/Release/Functions.html#index-hook-functions
    :
  }
}

prompt_zen_async_precmd() {
  LANG=C vcs_info
  print $vcs_info_msg_0_
}

prompt_zen_async_precmd_callback() {
  local fd=$1
  {
    zle -F $fd

    local REPLY
    read -ru $fd
    [[ -z $REPLY ]] &&
      return

    local segments=("${(@s[:])REPLY}")
    psvar[2]=$segments[1]
    psvar[3]=$segments[2]
    psvar[4]=$segments[3]

    zle && [[ $CONTEXT == start ]] &&
      zle .reset-prompt
  } always {
    exec {fd}<&-
  }
}

+vi-prompt_zen_git-status() {
  # Avoid index update (i.e. .git/index.lock remain)
  # see: https://git-scm.com/docs/git-status#_background_refresh
  if [[ -n "$(git --no-optional-locks status --porcelain -unormal 2>/dev/null)" ]]; then
    hook_com[unstaged]='*'
  fi
}

+vi-prompt_zen_git-author() {
  hook_com[misc]="$(git config --local user.name 2>/dev/null)"
}

prompt_zen_setup "$@"
