# yaml-language-server: $schema=https://raw.githubusercontent.com/844196/wk/v0.0.5/schemas/bindings.json
---
- key: space
  desc: Insert space
  type: command
  buffer: ' '
- key: j
  desc: Jump
  type: command
  buffer: ' cd -- ${(q)$(anyframe-widget-z-ghq --height 20%):-.}'
  trigger: ACCEPT
- key: tab
  desc: Navi
  type: command
  buffer: ' navi'
  trigger: ACCEPT
- key: g
  desc: Git
  type: bindings
  bindings:
    - key: b
      desc: Branch
      type: bindings
      bindings:
        - key: b
          desc: git branch
          type: command
          buffer: ' git -c pager.branch="~/.local/libexec/emojiless -E" branch -vvv' # NOTE: -E i.e. --quit-at-eof
          trigger: ACCEPT
        - key: m
          type: command
          buffer: 'git branch -m '
          trigger: COMPLETE
        - key: d
          type: command
          buffer: 'git branch -D '
          trigger: COMPLETE
    - key: a
      desc: Add
      type: bindings
      bindings:
        - key: f
          type: command
          buffer: 'git add '
          trigger: COMPLETE
        - key: a
          type: command
          buffer: 'git add-A'
          trigger: ACCEPT
    - key: c
      desc: Checkout/Commit
      type: bindings
      bindings:
        - key: space
          type: command
          buffer: 'git checkout '
          trigger: COMPLETE
        - key: b
          type: command
          buffer: 'git checkout -b '
          trigger: COMPLETE
        - key: .
          type: command
          buffer: 'git checkout .'
        - key: m
          type: command
          buffer: 'git commit -m '
          trigger: COMPLETE
        - key: a
          type: command
          buffer: 'git commit --amend --no-edit'
        - key: f
          type: command
          buffer: 'git commit --fixup '
          trigger: COMPLETE
    - key: r
      desc: Rebase/Reset
      type: bindings
      bindings:
        - key: space
          type: command
          buffer: 'git rebase '
          trigger: COMPLETE
        - key: i
          type: command
          buffer: 'git rebase -i '
          trigger: COMPLETE
        - key: .
          type: command
          buffer: 'git reset HEAD~'
        - key: h
          desc: git reset --hard
          type: command
          buffer: 'git reset --hard $(git rev-parse --abbrev-ref HEAD@{u} 2>/dev/null)'
          eval: true
    - key: p
      desc: Push/Pull
      type: bindings
      bindings:
        - key: space
          desc: git push
          type: command
          buffer: 'git push origin $(git current-branch)'
          eval: true
        - key: u
          desc: git push -u
          type: command
          buffer: 'git push -u origin $(git current-branch)'
          eval: true
        - key: f
          desc: git push -f
          type: command
          buffer: 'git push --force-with-lease --force-if-includes origin $(git current-branch)'
          eval: true
        - key: l
          type: command
          buffer: 'git pull'
          trigger: ACCEPT
    - key: h
      desc: GitHub
      type: bindings
      bindings:
        - key: r
          desc: Repository
          type: bindings
          bindings:
            - key: v
              desc: gh repo view
              type: command
              buffer: ' gh repo view --web'
              trigger: ACCEPT
        - key: i
          desc: Issue
          type: bindings
          bindings:
            - key: l
              desc: gh issue list
              type: command
              buffer: ' ${GH_ISSUE_REPO:+GH_REPO=$GH_ISSUE_REPO }gh issue list -w'
              eval: true
              trigger: ACCEPT
            - key: c
              desc: gh issue create
              type: command
              buffer: ' ${GH_ISSUE_REPO:+GH_REPO=$GH_ISSUE_REPO }gh issue create -w' # NOTE: -a @me をつけるとテンプレート一覧にからスタートしない
              eval: true
              trigger: ACCEPT
        - key: p
          desc: Pull request
          type: bindings
          bindings:
            - key: l
              desc: gh pr list
              type: command
              buffer: ' gh pr list -w'
              trigger: ACCEPT
            - key: v
              desc: gh pr view
              type: command
              buffer: ' gh pr view -w'
              trigger: ACCEPT
            - key: c
              desc: gh pr create
              type: command
              buffer: 'git push -u origin HEAD && gh pr create -w ${$(git base-branch):+-B $(git base-branch) }-H $(git current-branch) -a @me -t '
              eval: true
              trigger: COMPLETE
    - key: s
      desc: Status
      type: command
      buffer: ' git status'
      trigger: ACCEPT
    - key: d
      desc: Diff
      type: command
      buffer: ' git diff'
      trigger: ACCEPT
    - key: g
      desc: Last 10 commits graph
      type: command
      buffer: ' git -c pager.log="~/.local/libexec/emojiless -E" graph -n 10' # NOTE: -E i.e. --quit-at-eof
      trigger: ACCEPT
- key: d
  desc: Docker
  type: bindings
  bindings:
    - key: space
      type: command
      buffer: 'docker '
    - key: r
      type: command
      buffer: 'docker run --rm -it '
    - key: c
      desc: Compose
      type: bindings
      bindings:
        - key: space
          type: command
          buffer: 'docker compose '
        - key: r
          type: command
          buffer: 'docker compose run --rm '
- key: n
  desc: npm
  type: bindings
  bindings:
    - key: space
      type: command
      buffer: 'npm '
    - key: r
      type: command
      buffer: 'npm run '
- key: y
  desc: Yank
  type: bindings
  bindings:
    - key: .
      desc: Copy $PWD
      type: command
      buffer: ' echo -ne "\e]52;c;$(base64 <(pwd | tee >$TTY | sed -z ''$s/\n$//''))\a"'
      trigger: ACCEPT
    - key: f
      desc: Copy relative path of selected files
      type: command
      buffer: ' echo -ne "\e]52;c;$(base64 <(fzf --multi --height 25% <$TTY | tee >$TTY | sed -z ''$s/\n$//''))\a"'
      trigger: ACCEPT
    - key: F
      desc: Copy full path of selected files
      type: command
      buffer: ' echo -ne "\e]52;c;$(base64 <(fzf --multi --height 25% <$TTY | xargs -I{} realpath {} | tee >$TTY | sed -z ''$s/\n$//''))\a"'
      trigger: ACCEPT
    - key: w
      desc: Copy path as Windows file path of selected files
      type: command
      buffer: ' echo -ne "\e]52;c;$(base64 <(fzf --multi --height 25% <$TTY | xargs -I{} wslpath -w {} | tee >$TTY | sed -z ''$s/\n$//''))\a"'
      trigger: ACCEPT
    - key: b
      desc: Copy current branch
      type: command
      buffer: ' echo -ne "\e]52;c;$(base64 <(git current-branch | tee >$TTY | sed -z ''$s/\n$//''))\a"'
      trigger: ACCEPT
    - key: c
      desc: Copy last commit...
      type: bindings
      bindings:
        - key: m
          desc: Message
          type: command
          buffer: ' echo -ne "\e]52;c;$(base64 <(git --no-pager log -1 --pretty=format:%s%n HEAD | tee >$TTY | sed -z ''$s/\n$//''))\a"'
          trigger: ACCEPT
        - key: h
          desc: Hash (Short)
          type: command
          buffer: ' echo -ne "\e]52;c;$(base64 <(git rev-parse --short HEAD | tee >$TTY | sed -z ''$s/\n$//''))\a"'
          trigger: ACCEPT
        - key: H
          desc: Hash (Full)
          type: command
          buffer: ' echo -ne "\e]52;c;$(base64 <(git rev-parse HEAD | tee >$TTY | sed -z ''$s/\n$//''))\a"'
          trigger: ACCEPT
